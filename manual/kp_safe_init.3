.\"
.\" Copyright (c) 2017 Paul Fariello <paul@fariello.eu>
.\"
.\" Permission to use, copy, modify, and distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
.\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\"
.Dd May 11, 2017
.Dt KP_SAFE_INIT 3
.Os
.Sh NAME
.Nm kp_safe_init
.Nd "init a safe"
.Sh LIBRARY
.Lb libkickpass
.Sh SYNOPSIS
.In kickpass/kickpass.h
.In kickpass/safe.h
.Ft kp_error_t
.Fn kp_safe_init "struct kp_ctx *ctx" "struct kp_safe *safe" "const char *name"
.Sh DESCRIPTION
Init
.Fa safe
with
.Fa name .
.Fa safe
is closed. It can be used by all kp_safe_* functions.
.Pp
.Fa safe
must be preallocated either statically or dynamically before call to
.Fn kp_safe_init .
There is no need to deinit
.Fa safe .
.Sh RETURN VALUES
Upon successful completion, the value
.Er KP_SUCCESS
is returned; otherwise any KP_* error is returned.
.Sh ERRORS
.Fn kp_safe_init
can fail with the one of the following errors:
.Bl -tag -width Er
.It Bq Er KP_ERRNO
If standard error is specified in
.Er errno
variable.
.It Bq Er ENAMETOOLONG
Filename too long.
.El
.Sh SEE ALSO
.Xr kp_safe_open 3 ,
.Xr kp_safe_save 3 ,
.Xr kp_safe_close 3 ,
.Xr kp_safe_delete 3 ,
.Xr kp_safe_get_path 3 ,
.Xr kp_safe_rename 3 ,
.Xr kp_safe_store 3
.Sh AUTHORS
.Nm
is written by
.An Paul Fariello Aq Mt paul@fariello.eu .
